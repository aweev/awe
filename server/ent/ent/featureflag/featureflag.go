// Code generated by ent, DO NOT EDIT.

package featureflag

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the featureflag type in the database.
	Label = "feature_flag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "key"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldIsActive holds the string denoting the is_active field in the database.
	FieldIsActive = "is_active"
	// FieldRolloutPercentage holds the string denoting the rollout_percentage field in the database.
	FieldRolloutPercentage = "rollout_percentage"
	// FieldAllowedUserIds holds the string denoting the allowed_user_ids field in the database.
	FieldAllowedUserIds = "allowed_user_ids"
	// FieldAllowedRoles holds the string denoting the allowed_roles field in the database.
	FieldAllowedRoles = "allowed_roles"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the featureflag in the database.
	Table = "feature_flags"
)

// Columns holds all SQL columns for featureflag fields.
var Columns = []string{
	FieldID,
	FieldDescription,
	FieldIsActive,
	FieldRolloutPercentage,
	FieldAllowedUserIds,
	FieldAllowedRoles,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsActive holds the default value on creation for the "is_active" field.
	DefaultIsActive bool
	// DefaultRolloutPercentage holds the default value on creation for the "rollout_percentage" field.
	DefaultRolloutPercentage int
	// RolloutPercentageValidator is a validator for the "rollout_percentage" field. It is called by the builders before save.
	RolloutPercentageValidator func(int) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)

// OrderOption defines the ordering options for the FeatureFlag queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByDescription orders the results by the description field.
func ByDescription(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDescription, opts...).ToFunc()
}

// ByIsActive orders the results by the is_active field.
func ByIsActive(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsActive, opts...).ToFunc()
}

// ByRolloutPercentage orders the results by the rollout_percentage field.
func ByRolloutPercentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRolloutPercentage, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
