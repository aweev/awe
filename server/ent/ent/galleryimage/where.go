// Code generated by ent, DO NOT EDIT.

package galleryimage

import (
	"awe/ent/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLTE(FieldID, id))
}

// Order applies equality check predicate on the "order" field. It's identical to OrderEQ.
func Order(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldOrder, v))
}

// ImageURL applies equality check predicate on the "image_url" field. It's identical to ImageURLEQ.
func ImageURL(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldImageURL, v))
}

// ImageWidth applies equality check predicate on the "image_width" field. It's identical to ImageWidthEQ.
func ImageWidth(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldImageWidth, v))
}

// ImageHeight applies equality check predicate on the "image_height" field. It's identical to ImageHeightEQ.
func ImageHeight(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldImageHeight, v))
}

// OrderEQ applies the EQ predicate on the "order" field.
func OrderEQ(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldOrder, v))
}

// OrderNEQ applies the NEQ predicate on the "order" field.
func OrderNEQ(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNEQ(FieldOrder, v))
}

// OrderIn applies the In predicate on the "order" field.
func OrderIn(vs ...int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldIn(FieldOrder, vs...))
}

// OrderNotIn applies the NotIn predicate on the "order" field.
func OrderNotIn(vs ...int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNotIn(FieldOrder, vs...))
}

// OrderGT applies the GT predicate on the "order" field.
func OrderGT(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGT(FieldOrder, v))
}

// OrderGTE applies the GTE predicate on the "order" field.
func OrderGTE(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGTE(FieldOrder, v))
}

// OrderLT applies the LT predicate on the "order" field.
func OrderLT(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLT(FieldOrder, v))
}

// OrderLTE applies the LTE predicate on the "order" field.
func OrderLTE(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLTE(FieldOrder, v))
}

// ImageURLEQ applies the EQ predicate on the "image_url" field.
func ImageURLEQ(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldImageURL, v))
}

// ImageURLNEQ applies the NEQ predicate on the "image_url" field.
func ImageURLNEQ(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNEQ(FieldImageURL, v))
}

// ImageURLIn applies the In predicate on the "image_url" field.
func ImageURLIn(vs ...string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldIn(FieldImageURL, vs...))
}

// ImageURLNotIn applies the NotIn predicate on the "image_url" field.
func ImageURLNotIn(vs ...string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNotIn(FieldImageURL, vs...))
}

// ImageURLGT applies the GT predicate on the "image_url" field.
func ImageURLGT(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGT(FieldImageURL, v))
}

// ImageURLGTE applies the GTE predicate on the "image_url" field.
func ImageURLGTE(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGTE(FieldImageURL, v))
}

// ImageURLLT applies the LT predicate on the "image_url" field.
func ImageURLLT(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLT(FieldImageURL, v))
}

// ImageURLLTE applies the LTE predicate on the "image_url" field.
func ImageURLLTE(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLTE(FieldImageURL, v))
}

// ImageURLContains applies the Contains predicate on the "image_url" field.
func ImageURLContains(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldContains(FieldImageURL, v))
}

// ImageURLHasPrefix applies the HasPrefix predicate on the "image_url" field.
func ImageURLHasPrefix(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldHasPrefix(FieldImageURL, v))
}

// ImageURLHasSuffix applies the HasSuffix predicate on the "image_url" field.
func ImageURLHasSuffix(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldHasSuffix(FieldImageURL, v))
}

// ImageURLEqualFold applies the EqualFold predicate on the "image_url" field.
func ImageURLEqualFold(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEqualFold(FieldImageURL, v))
}

// ImageURLContainsFold applies the ContainsFold predicate on the "image_url" field.
func ImageURLContainsFold(v string) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldContainsFold(FieldImageURL, v))
}

// ImageWidthEQ applies the EQ predicate on the "image_width" field.
func ImageWidthEQ(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldImageWidth, v))
}

// ImageWidthNEQ applies the NEQ predicate on the "image_width" field.
func ImageWidthNEQ(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNEQ(FieldImageWidth, v))
}

// ImageWidthIn applies the In predicate on the "image_width" field.
func ImageWidthIn(vs ...int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldIn(FieldImageWidth, vs...))
}

// ImageWidthNotIn applies the NotIn predicate on the "image_width" field.
func ImageWidthNotIn(vs ...int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNotIn(FieldImageWidth, vs...))
}

// ImageWidthGT applies the GT predicate on the "image_width" field.
func ImageWidthGT(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGT(FieldImageWidth, v))
}

// ImageWidthGTE applies the GTE predicate on the "image_width" field.
func ImageWidthGTE(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGTE(FieldImageWidth, v))
}

// ImageWidthLT applies the LT predicate on the "image_width" field.
func ImageWidthLT(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLT(FieldImageWidth, v))
}

// ImageWidthLTE applies the LTE predicate on the "image_width" field.
func ImageWidthLTE(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLTE(FieldImageWidth, v))
}

// ImageWidthIsNil applies the IsNil predicate on the "image_width" field.
func ImageWidthIsNil() predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldIsNull(FieldImageWidth))
}

// ImageWidthNotNil applies the NotNil predicate on the "image_width" field.
func ImageWidthNotNil() predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNotNull(FieldImageWidth))
}

// ImageHeightEQ applies the EQ predicate on the "image_height" field.
func ImageHeightEQ(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldEQ(FieldImageHeight, v))
}

// ImageHeightNEQ applies the NEQ predicate on the "image_height" field.
func ImageHeightNEQ(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNEQ(FieldImageHeight, v))
}

// ImageHeightIn applies the In predicate on the "image_height" field.
func ImageHeightIn(vs ...int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldIn(FieldImageHeight, vs...))
}

// ImageHeightNotIn applies the NotIn predicate on the "image_height" field.
func ImageHeightNotIn(vs ...int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNotIn(FieldImageHeight, vs...))
}

// ImageHeightGT applies the GT predicate on the "image_height" field.
func ImageHeightGT(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGT(FieldImageHeight, v))
}

// ImageHeightGTE applies the GTE predicate on the "image_height" field.
func ImageHeightGTE(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldGTE(FieldImageHeight, v))
}

// ImageHeightLT applies the LT predicate on the "image_height" field.
func ImageHeightLT(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLT(FieldImageHeight, v))
}

// ImageHeightLTE applies the LTE predicate on the "image_height" field.
func ImageHeightLTE(v int) predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldLTE(FieldImageHeight, v))
}

// ImageHeightIsNil applies the IsNil predicate on the "image_height" field.
func ImageHeightIsNil() predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldIsNull(FieldImageHeight))
}

// ImageHeightNotNil applies the NotNil predicate on the "image_height" field.
func ImageHeightNotNil() predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNotNull(FieldImageHeight))
}

// CaptionIsNil applies the IsNil predicate on the "caption" field.
func CaptionIsNil() predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldIsNull(FieldCaption))
}

// CaptionNotNil applies the NotNil predicate on the "caption" field.
func CaptionNotNil() predicate.GalleryImage {
	return predicate.GalleryImage(sql.FieldNotNull(FieldCaption))
}

// HasBlock applies the HasEdge predicate on the "block" edge.
func HasBlock() predicate.GalleryImage {
	return predicate.GalleryImage(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, BlockTable, BlockColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasBlockWith applies the HasEdge predicate on the "block" edge with a given conditions (other predicates).
func HasBlockWith(preds ...predicate.BlockGallery) predicate.GalleryImage {
	return predicate.GalleryImage(func(s *sql.Selector) {
		step := newBlockStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.GalleryImage) predicate.GalleryImage {
	return predicate.GalleryImage(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.GalleryImage) predicate.GalleryImage {
	return predicate.GalleryImage(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.GalleryImage) predicate.GalleryImage {
	return predicate.GalleryImage(sql.NotPredicates(p))
}
