// Code generated by ent, DO NOT EDIT.

package seoconfig

import (
	"awe/ent/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLTE(FieldID, id))
}

// OgImageURL applies equality check predicate on the "og_image_url" field. It's identical to OgImageURLEQ.
func OgImageURL(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldOgImageURL, v))
}

// OgType applies equality check predicate on the "og_type" field. It's identical to OgTypeEQ.
func OgType(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldOgType, v))
}

// TwitterCard applies equality check predicate on the "twitter_card" field. It's identical to TwitterCardEQ.
func TwitterCard(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldTwitterCard, v))
}

// TwitterImageURL applies equality check predicate on the "twitter_image_url" field. It's identical to TwitterImageURLEQ.
func TwitterImageURL(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldTwitterImageURL, v))
}

// CanonicalURL applies equality check predicate on the "canonical_url" field. It's identical to CanonicalURLEQ.
func CanonicalURL(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldCanonicalURL, v))
}

// Noindex applies equality check predicate on the "noindex" field. It's identical to NoindexEQ.
func Noindex(v bool) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldNoindex, v))
}

// Nofollow applies equality check predicate on the "nofollow" field. It's identical to NofollowEQ.
func Nofollow(v bool) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldNofollow, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldUpdatedAt, v))
}

// MetaDescriptionIsNil applies the IsNil predicate on the "meta_description" field.
func MetaDescriptionIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldMetaDescription))
}

// MetaDescriptionNotNil applies the NotNil predicate on the "meta_description" field.
func MetaDescriptionNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldMetaDescription))
}

// KeywordsIsNil applies the IsNil predicate on the "keywords" field.
func KeywordsIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldKeywords))
}

// KeywordsNotNil applies the NotNil predicate on the "keywords" field.
func KeywordsNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldKeywords))
}

// OgTitleIsNil applies the IsNil predicate on the "og_title" field.
func OgTitleIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldOgTitle))
}

// OgTitleNotNil applies the NotNil predicate on the "og_title" field.
func OgTitleNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldOgTitle))
}

// OgDescriptionIsNil applies the IsNil predicate on the "og_description" field.
func OgDescriptionIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldOgDescription))
}

// OgDescriptionNotNil applies the NotNil predicate on the "og_description" field.
func OgDescriptionNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldOgDescription))
}

// OgImageURLEQ applies the EQ predicate on the "og_image_url" field.
func OgImageURLEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldOgImageURL, v))
}

// OgImageURLNEQ applies the NEQ predicate on the "og_image_url" field.
func OgImageURLNEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldOgImageURL, v))
}

// OgImageURLIn applies the In predicate on the "og_image_url" field.
func OgImageURLIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIn(FieldOgImageURL, vs...))
}

// OgImageURLNotIn applies the NotIn predicate on the "og_image_url" field.
func OgImageURLNotIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotIn(FieldOgImageURL, vs...))
}

// OgImageURLGT applies the GT predicate on the "og_image_url" field.
func OgImageURLGT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGT(FieldOgImageURL, v))
}

// OgImageURLGTE applies the GTE predicate on the "og_image_url" field.
func OgImageURLGTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGTE(FieldOgImageURL, v))
}

// OgImageURLLT applies the LT predicate on the "og_image_url" field.
func OgImageURLLT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLT(FieldOgImageURL, v))
}

// OgImageURLLTE applies the LTE predicate on the "og_image_url" field.
func OgImageURLLTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLTE(FieldOgImageURL, v))
}

// OgImageURLContains applies the Contains predicate on the "og_image_url" field.
func OgImageURLContains(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContains(FieldOgImageURL, v))
}

// OgImageURLHasPrefix applies the HasPrefix predicate on the "og_image_url" field.
func OgImageURLHasPrefix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasPrefix(FieldOgImageURL, v))
}

// OgImageURLHasSuffix applies the HasSuffix predicate on the "og_image_url" field.
func OgImageURLHasSuffix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasSuffix(FieldOgImageURL, v))
}

// OgImageURLIsNil applies the IsNil predicate on the "og_image_url" field.
func OgImageURLIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldOgImageURL))
}

// OgImageURLNotNil applies the NotNil predicate on the "og_image_url" field.
func OgImageURLNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldOgImageURL))
}

// OgImageURLEqualFold applies the EqualFold predicate on the "og_image_url" field.
func OgImageURLEqualFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEqualFold(FieldOgImageURL, v))
}

// OgImageURLContainsFold applies the ContainsFold predicate on the "og_image_url" field.
func OgImageURLContainsFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContainsFold(FieldOgImageURL, v))
}

// OgTypeEQ applies the EQ predicate on the "og_type" field.
func OgTypeEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldOgType, v))
}

// OgTypeNEQ applies the NEQ predicate on the "og_type" field.
func OgTypeNEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldOgType, v))
}

// OgTypeIn applies the In predicate on the "og_type" field.
func OgTypeIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIn(FieldOgType, vs...))
}

// OgTypeNotIn applies the NotIn predicate on the "og_type" field.
func OgTypeNotIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotIn(FieldOgType, vs...))
}

// OgTypeGT applies the GT predicate on the "og_type" field.
func OgTypeGT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGT(FieldOgType, v))
}

// OgTypeGTE applies the GTE predicate on the "og_type" field.
func OgTypeGTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGTE(FieldOgType, v))
}

// OgTypeLT applies the LT predicate on the "og_type" field.
func OgTypeLT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLT(FieldOgType, v))
}

// OgTypeLTE applies the LTE predicate on the "og_type" field.
func OgTypeLTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLTE(FieldOgType, v))
}

// OgTypeContains applies the Contains predicate on the "og_type" field.
func OgTypeContains(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContains(FieldOgType, v))
}

// OgTypeHasPrefix applies the HasPrefix predicate on the "og_type" field.
func OgTypeHasPrefix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasPrefix(FieldOgType, v))
}

// OgTypeHasSuffix applies the HasSuffix predicate on the "og_type" field.
func OgTypeHasSuffix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasSuffix(FieldOgType, v))
}

// OgTypeEqualFold applies the EqualFold predicate on the "og_type" field.
func OgTypeEqualFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEqualFold(FieldOgType, v))
}

// OgTypeContainsFold applies the ContainsFold predicate on the "og_type" field.
func OgTypeContainsFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContainsFold(FieldOgType, v))
}

// TwitterCardEQ applies the EQ predicate on the "twitter_card" field.
func TwitterCardEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldTwitterCard, v))
}

// TwitterCardNEQ applies the NEQ predicate on the "twitter_card" field.
func TwitterCardNEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldTwitterCard, v))
}

// TwitterCardIn applies the In predicate on the "twitter_card" field.
func TwitterCardIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIn(FieldTwitterCard, vs...))
}

// TwitterCardNotIn applies the NotIn predicate on the "twitter_card" field.
func TwitterCardNotIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotIn(FieldTwitterCard, vs...))
}

// TwitterCardGT applies the GT predicate on the "twitter_card" field.
func TwitterCardGT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGT(FieldTwitterCard, v))
}

// TwitterCardGTE applies the GTE predicate on the "twitter_card" field.
func TwitterCardGTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGTE(FieldTwitterCard, v))
}

// TwitterCardLT applies the LT predicate on the "twitter_card" field.
func TwitterCardLT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLT(FieldTwitterCard, v))
}

// TwitterCardLTE applies the LTE predicate on the "twitter_card" field.
func TwitterCardLTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLTE(FieldTwitterCard, v))
}

// TwitterCardContains applies the Contains predicate on the "twitter_card" field.
func TwitterCardContains(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContains(FieldTwitterCard, v))
}

// TwitterCardHasPrefix applies the HasPrefix predicate on the "twitter_card" field.
func TwitterCardHasPrefix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasPrefix(FieldTwitterCard, v))
}

// TwitterCardHasSuffix applies the HasSuffix predicate on the "twitter_card" field.
func TwitterCardHasSuffix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasSuffix(FieldTwitterCard, v))
}

// TwitterCardEqualFold applies the EqualFold predicate on the "twitter_card" field.
func TwitterCardEqualFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEqualFold(FieldTwitterCard, v))
}

// TwitterCardContainsFold applies the ContainsFold predicate on the "twitter_card" field.
func TwitterCardContainsFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContainsFold(FieldTwitterCard, v))
}

// TwitterTitleIsNil applies the IsNil predicate on the "twitter_title" field.
func TwitterTitleIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldTwitterTitle))
}

// TwitterTitleNotNil applies the NotNil predicate on the "twitter_title" field.
func TwitterTitleNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldTwitterTitle))
}

// TwitterDescriptionIsNil applies the IsNil predicate on the "twitter_description" field.
func TwitterDescriptionIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldTwitterDescription))
}

// TwitterDescriptionNotNil applies the NotNil predicate on the "twitter_description" field.
func TwitterDescriptionNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldTwitterDescription))
}

// TwitterImageURLEQ applies the EQ predicate on the "twitter_image_url" field.
func TwitterImageURLEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldTwitterImageURL, v))
}

// TwitterImageURLNEQ applies the NEQ predicate on the "twitter_image_url" field.
func TwitterImageURLNEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldTwitterImageURL, v))
}

// TwitterImageURLIn applies the In predicate on the "twitter_image_url" field.
func TwitterImageURLIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIn(FieldTwitterImageURL, vs...))
}

// TwitterImageURLNotIn applies the NotIn predicate on the "twitter_image_url" field.
func TwitterImageURLNotIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotIn(FieldTwitterImageURL, vs...))
}

// TwitterImageURLGT applies the GT predicate on the "twitter_image_url" field.
func TwitterImageURLGT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGT(FieldTwitterImageURL, v))
}

// TwitterImageURLGTE applies the GTE predicate on the "twitter_image_url" field.
func TwitterImageURLGTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGTE(FieldTwitterImageURL, v))
}

// TwitterImageURLLT applies the LT predicate on the "twitter_image_url" field.
func TwitterImageURLLT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLT(FieldTwitterImageURL, v))
}

// TwitterImageURLLTE applies the LTE predicate on the "twitter_image_url" field.
func TwitterImageURLLTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLTE(FieldTwitterImageURL, v))
}

// TwitterImageURLContains applies the Contains predicate on the "twitter_image_url" field.
func TwitterImageURLContains(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContains(FieldTwitterImageURL, v))
}

// TwitterImageURLHasPrefix applies the HasPrefix predicate on the "twitter_image_url" field.
func TwitterImageURLHasPrefix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasPrefix(FieldTwitterImageURL, v))
}

// TwitterImageURLHasSuffix applies the HasSuffix predicate on the "twitter_image_url" field.
func TwitterImageURLHasSuffix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasSuffix(FieldTwitterImageURL, v))
}

// TwitterImageURLIsNil applies the IsNil predicate on the "twitter_image_url" field.
func TwitterImageURLIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldTwitterImageURL))
}

// TwitterImageURLNotNil applies the NotNil predicate on the "twitter_image_url" field.
func TwitterImageURLNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldTwitterImageURL))
}

// TwitterImageURLEqualFold applies the EqualFold predicate on the "twitter_image_url" field.
func TwitterImageURLEqualFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEqualFold(FieldTwitterImageURL, v))
}

// TwitterImageURLContainsFold applies the ContainsFold predicate on the "twitter_image_url" field.
func TwitterImageURLContainsFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContainsFold(FieldTwitterImageURL, v))
}

// CanonicalURLEQ applies the EQ predicate on the "canonical_url" field.
func CanonicalURLEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldCanonicalURL, v))
}

// CanonicalURLNEQ applies the NEQ predicate on the "canonical_url" field.
func CanonicalURLNEQ(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldCanonicalURL, v))
}

// CanonicalURLIn applies the In predicate on the "canonical_url" field.
func CanonicalURLIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIn(FieldCanonicalURL, vs...))
}

// CanonicalURLNotIn applies the NotIn predicate on the "canonical_url" field.
func CanonicalURLNotIn(vs ...string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotIn(FieldCanonicalURL, vs...))
}

// CanonicalURLGT applies the GT predicate on the "canonical_url" field.
func CanonicalURLGT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGT(FieldCanonicalURL, v))
}

// CanonicalURLGTE applies the GTE predicate on the "canonical_url" field.
func CanonicalURLGTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGTE(FieldCanonicalURL, v))
}

// CanonicalURLLT applies the LT predicate on the "canonical_url" field.
func CanonicalURLLT(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLT(FieldCanonicalURL, v))
}

// CanonicalURLLTE applies the LTE predicate on the "canonical_url" field.
func CanonicalURLLTE(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLTE(FieldCanonicalURL, v))
}

// CanonicalURLContains applies the Contains predicate on the "canonical_url" field.
func CanonicalURLContains(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContains(FieldCanonicalURL, v))
}

// CanonicalURLHasPrefix applies the HasPrefix predicate on the "canonical_url" field.
func CanonicalURLHasPrefix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasPrefix(FieldCanonicalURL, v))
}

// CanonicalURLHasSuffix applies the HasSuffix predicate on the "canonical_url" field.
func CanonicalURLHasSuffix(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldHasSuffix(FieldCanonicalURL, v))
}

// CanonicalURLIsNil applies the IsNil predicate on the "canonical_url" field.
func CanonicalURLIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldCanonicalURL))
}

// CanonicalURLNotNil applies the NotNil predicate on the "canonical_url" field.
func CanonicalURLNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldCanonicalURL))
}

// CanonicalURLEqualFold applies the EqualFold predicate on the "canonical_url" field.
func CanonicalURLEqualFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEqualFold(FieldCanonicalURL, v))
}

// CanonicalURLContainsFold applies the ContainsFold predicate on the "canonical_url" field.
func CanonicalURLContainsFold(v string) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldContainsFold(FieldCanonicalURL, v))
}

// NoindexEQ applies the EQ predicate on the "noindex" field.
func NoindexEQ(v bool) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldNoindex, v))
}

// NoindexNEQ applies the NEQ predicate on the "noindex" field.
func NoindexNEQ(v bool) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldNoindex, v))
}

// NofollowEQ applies the EQ predicate on the "nofollow" field.
func NofollowEQ(v bool) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldNofollow, v))
}

// NofollowNEQ applies the NEQ predicate on the "nofollow" field.
func NofollowNEQ(v bool) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldNofollow, v))
}

// StructuredDataIsNil applies the IsNil predicate on the "structured_data" field.
func StructuredDataIsNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIsNull(FieldStructuredData))
}

// StructuredDataNotNil applies the NotNil predicate on the "structured_data" field.
func StructuredDataNotNil() predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotNull(FieldStructuredData))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.SeoConfig {
	return predicate.SeoConfig(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasPage applies the HasEdge predicate on the "page" edge.
func HasPage() predicate.SeoConfig {
	return predicate.SeoConfig(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, PageTable, PageColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPageWith applies the HasEdge predicate on the "page" edge with a given conditions (other predicates).
func HasPageWith(preds ...predicate.Page) predicate.SeoConfig {
	return predicate.SeoConfig(func(s *sql.Selector) {
		step := newPageStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SeoConfig) predicate.SeoConfig {
	return predicate.SeoConfig(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SeoConfig) predicate.SeoConfig {
	return predicate.SeoConfig(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SeoConfig) predicate.SeoConfig {
	return predicate.SeoConfig(sql.NotPredicates(p))
}
