// Code generated by ent, DO NOT EDIT.

package trusteddevice

import (
	"awe/ent/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLTE(FieldID, id))
}

// Fingerprint applies equality check predicate on the "fingerprint" field. It's identical to FingerprintEQ.
func Fingerprint(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldFingerprint, v))
}

// UserAgent applies equality check predicate on the "user_agent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldUserAgent, v))
}

// LastIP applies equality check predicate on the "last_ip" field. It's identical to LastIPEQ.
func LastIP(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldLastIP, v))
}

// LastUsedAt applies equality check predicate on the "last_used_at" field. It's identical to LastUsedAtEQ.
func LastUsedAt(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldLastUsedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldCreatedAt, v))
}

// VerifiedAt applies equality check predicate on the "verified_at" field. It's identical to VerifiedAtEQ.
func VerifiedAt(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldVerifiedAt, v))
}

// FingerprintEQ applies the EQ predicate on the "fingerprint" field.
func FingerprintEQ(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldFingerprint, v))
}

// FingerprintNEQ applies the NEQ predicate on the "fingerprint" field.
func FingerprintNEQ(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNEQ(FieldFingerprint, v))
}

// FingerprintIn applies the In predicate on the "fingerprint" field.
func FingerprintIn(vs ...string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIn(FieldFingerprint, vs...))
}

// FingerprintNotIn applies the NotIn predicate on the "fingerprint" field.
func FingerprintNotIn(vs ...string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotIn(FieldFingerprint, vs...))
}

// FingerprintGT applies the GT predicate on the "fingerprint" field.
func FingerprintGT(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGT(FieldFingerprint, v))
}

// FingerprintGTE applies the GTE predicate on the "fingerprint" field.
func FingerprintGTE(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGTE(FieldFingerprint, v))
}

// FingerprintLT applies the LT predicate on the "fingerprint" field.
func FingerprintLT(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLT(FieldFingerprint, v))
}

// FingerprintLTE applies the LTE predicate on the "fingerprint" field.
func FingerprintLTE(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLTE(FieldFingerprint, v))
}

// FingerprintContains applies the Contains predicate on the "fingerprint" field.
func FingerprintContains(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldContains(FieldFingerprint, v))
}

// FingerprintHasPrefix applies the HasPrefix predicate on the "fingerprint" field.
func FingerprintHasPrefix(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldHasPrefix(FieldFingerprint, v))
}

// FingerprintHasSuffix applies the HasSuffix predicate on the "fingerprint" field.
func FingerprintHasSuffix(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldHasSuffix(FieldFingerprint, v))
}

// FingerprintEqualFold applies the EqualFold predicate on the "fingerprint" field.
func FingerprintEqualFold(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEqualFold(FieldFingerprint, v))
}

// FingerprintContainsFold applies the ContainsFold predicate on the "fingerprint" field.
func FingerprintContainsFold(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldContainsFold(FieldFingerprint, v))
}

// UserAgentEQ applies the EQ predicate on the "user_agent" field.
func UserAgentEQ(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "user_agent" field.
func UserAgentNEQ(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "user_agent" field.
func UserAgentIn(vs ...string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "user_agent" field.
func UserAgentNotIn(vs ...string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "user_agent" field.
func UserAgentGT(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "user_agent" field.
func UserAgentGTE(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "user_agent" field.
func UserAgentLT(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "user_agent" field.
func UserAgentLTE(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "user_agent" field.
func UserAgentContains(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "user_agent" field.
func UserAgentHasPrefix(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "user_agent" field.
func UserAgentHasSuffix(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentIsNil applies the IsNil predicate on the "user_agent" field.
func UserAgentIsNil() predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIsNull(FieldUserAgent))
}

// UserAgentNotNil applies the NotNil predicate on the "user_agent" field.
func UserAgentNotNil() predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotNull(FieldUserAgent))
}

// UserAgentEqualFold applies the EqualFold predicate on the "user_agent" field.
func UserAgentEqualFold(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "user_agent" field.
func UserAgentContainsFold(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldContainsFold(FieldUserAgent, v))
}

// LastIPEQ applies the EQ predicate on the "last_ip" field.
func LastIPEQ(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldLastIP, v))
}

// LastIPNEQ applies the NEQ predicate on the "last_ip" field.
func LastIPNEQ(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNEQ(FieldLastIP, v))
}

// LastIPIn applies the In predicate on the "last_ip" field.
func LastIPIn(vs ...string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIn(FieldLastIP, vs...))
}

// LastIPNotIn applies the NotIn predicate on the "last_ip" field.
func LastIPNotIn(vs ...string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotIn(FieldLastIP, vs...))
}

// LastIPGT applies the GT predicate on the "last_ip" field.
func LastIPGT(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGT(FieldLastIP, v))
}

// LastIPGTE applies the GTE predicate on the "last_ip" field.
func LastIPGTE(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGTE(FieldLastIP, v))
}

// LastIPLT applies the LT predicate on the "last_ip" field.
func LastIPLT(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLT(FieldLastIP, v))
}

// LastIPLTE applies the LTE predicate on the "last_ip" field.
func LastIPLTE(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLTE(FieldLastIP, v))
}

// LastIPContains applies the Contains predicate on the "last_ip" field.
func LastIPContains(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldContains(FieldLastIP, v))
}

// LastIPHasPrefix applies the HasPrefix predicate on the "last_ip" field.
func LastIPHasPrefix(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldHasPrefix(FieldLastIP, v))
}

// LastIPHasSuffix applies the HasSuffix predicate on the "last_ip" field.
func LastIPHasSuffix(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldHasSuffix(FieldLastIP, v))
}

// LastIPIsNil applies the IsNil predicate on the "last_ip" field.
func LastIPIsNil() predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIsNull(FieldLastIP))
}

// LastIPNotNil applies the NotNil predicate on the "last_ip" field.
func LastIPNotNil() predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotNull(FieldLastIP))
}

// LastIPEqualFold applies the EqualFold predicate on the "last_ip" field.
func LastIPEqualFold(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEqualFold(FieldLastIP, v))
}

// LastIPContainsFold applies the ContainsFold predicate on the "last_ip" field.
func LastIPContainsFold(v string) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldContainsFold(FieldLastIP, v))
}

// LastUsedAtEQ applies the EQ predicate on the "last_used_at" field.
func LastUsedAtEQ(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldLastUsedAt, v))
}

// LastUsedAtNEQ applies the NEQ predicate on the "last_used_at" field.
func LastUsedAtNEQ(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNEQ(FieldLastUsedAt, v))
}

// LastUsedAtIn applies the In predicate on the "last_used_at" field.
func LastUsedAtIn(vs ...time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIn(FieldLastUsedAt, vs...))
}

// LastUsedAtNotIn applies the NotIn predicate on the "last_used_at" field.
func LastUsedAtNotIn(vs ...time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotIn(FieldLastUsedAt, vs...))
}

// LastUsedAtGT applies the GT predicate on the "last_used_at" field.
func LastUsedAtGT(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGT(FieldLastUsedAt, v))
}

// LastUsedAtGTE applies the GTE predicate on the "last_used_at" field.
func LastUsedAtGTE(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGTE(FieldLastUsedAt, v))
}

// LastUsedAtLT applies the LT predicate on the "last_used_at" field.
func LastUsedAtLT(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLT(FieldLastUsedAt, v))
}

// LastUsedAtLTE applies the LTE predicate on the "last_used_at" field.
func LastUsedAtLTE(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLTE(FieldLastUsedAt, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLTE(FieldCreatedAt, v))
}

// VerifiedAtEQ applies the EQ predicate on the "verified_at" field.
func VerifiedAtEQ(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldEQ(FieldVerifiedAt, v))
}

// VerifiedAtNEQ applies the NEQ predicate on the "verified_at" field.
func VerifiedAtNEQ(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNEQ(FieldVerifiedAt, v))
}

// VerifiedAtIn applies the In predicate on the "verified_at" field.
func VerifiedAtIn(vs ...time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIn(FieldVerifiedAt, vs...))
}

// VerifiedAtNotIn applies the NotIn predicate on the "verified_at" field.
func VerifiedAtNotIn(vs ...time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotIn(FieldVerifiedAt, vs...))
}

// VerifiedAtGT applies the GT predicate on the "verified_at" field.
func VerifiedAtGT(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGT(FieldVerifiedAt, v))
}

// VerifiedAtGTE applies the GTE predicate on the "verified_at" field.
func VerifiedAtGTE(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldGTE(FieldVerifiedAt, v))
}

// VerifiedAtLT applies the LT predicate on the "verified_at" field.
func VerifiedAtLT(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLT(FieldVerifiedAt, v))
}

// VerifiedAtLTE applies the LTE predicate on the "verified_at" field.
func VerifiedAtLTE(v time.Time) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldLTE(FieldVerifiedAt, v))
}

// VerifiedAtIsNil applies the IsNil predicate on the "verified_at" field.
func VerifiedAtIsNil() predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldIsNull(FieldVerifiedAt))
}

// VerifiedAtNotNil applies the NotNil predicate on the "verified_at" field.
func VerifiedAtNotNil() predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.FieldNotNull(FieldVerifiedAt))
}

// HasUser applies the HasEdge predicate on the "user" edge.
func HasUser() predicate.TrustedDevice {
	return predicate.TrustedDevice(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, UserTable, UserColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUserWith applies the HasEdge predicate on the "user" edge with a given conditions (other predicates).
func HasUserWith(preds ...predicate.User) predicate.TrustedDevice {
	return predicate.TrustedDevice(func(s *sql.Selector) {
		step := newUserStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TrustedDevice) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TrustedDevice) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TrustedDevice) predicate.TrustedDevice {
	return predicate.TrustedDevice(sql.NotPredicates(p))
}
