// Code generated by ent, DO NOT EDIT.

package impactmetric

import (
	"awe/ent/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldID, id))
}

// Unit applies equality check predicate on the "unit" field. It's identical to UnitEQ.
func Unit(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldUnit, v))
}

// TargetValue applies equality check predicate on the "target_value" field. It's identical to TargetValueEQ.
func TargetValue(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldTargetValue, v))
}

// CurrentValue applies equality check predicate on the "current_value" field. It's identical to CurrentValueEQ.
func CurrentValue(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldCurrentValue, v))
}

// TargetDate applies equality check predicate on the "target_date" field. It's identical to TargetDateEQ.
func TargetDate(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldTargetDate, v))
}

// CalculationMethod applies equality check predicate on the "calculation_method" field. It's identical to CalculationMethodEQ.
func CalculationMethod(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldCalculationMethod, v))
}

// IsAutoCalculated applies equality check predicate on the "is_auto_calculated" field. It's identical to IsAutoCalculatedEQ.
func IsAutoCalculated(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldIsAutoCalculated, v))
}

// LastCalculated applies equality check predicate on the "last_calculated" field. It's identical to LastCalculatedEQ.
func LastCalculated(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldLastCalculated, v))
}

// DisplayOrder applies equality check predicate on the "display_order" field. It's identical to DisplayOrderEQ.
func DisplayOrder(v int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldDisplayOrder, v))
}

// IsPublic applies equality check predicate on the "is_public" field. It's identical to IsPublicEQ.
func IsPublic(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldIsPublic, v))
}

// ShowOnDashboard applies equality check predicate on the "show_on_dashboard" field. It's identical to ShowOnDashboardEQ.
func ShowOnDashboard(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldShowOnDashboard, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldUpdatedAt, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v Type) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v Type) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...Type) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...Type) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldType, vs...))
}

// UnitEQ applies the EQ predicate on the "unit" field.
func UnitEQ(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldUnit, v))
}

// UnitNEQ applies the NEQ predicate on the "unit" field.
func UnitNEQ(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldUnit, v))
}

// UnitIn applies the In predicate on the "unit" field.
func UnitIn(vs ...string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldUnit, vs...))
}

// UnitNotIn applies the NotIn predicate on the "unit" field.
func UnitNotIn(vs ...string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldUnit, vs...))
}

// UnitGT applies the GT predicate on the "unit" field.
func UnitGT(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldUnit, v))
}

// UnitGTE applies the GTE predicate on the "unit" field.
func UnitGTE(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldUnit, v))
}

// UnitLT applies the LT predicate on the "unit" field.
func UnitLT(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldUnit, v))
}

// UnitLTE applies the LTE predicate on the "unit" field.
func UnitLTE(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldUnit, v))
}

// UnitContains applies the Contains predicate on the "unit" field.
func UnitContains(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldContains(FieldUnit, v))
}

// UnitHasPrefix applies the HasPrefix predicate on the "unit" field.
func UnitHasPrefix(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldHasPrefix(FieldUnit, v))
}

// UnitHasSuffix applies the HasSuffix predicate on the "unit" field.
func UnitHasSuffix(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldHasSuffix(FieldUnit, v))
}

// UnitEqualFold applies the EqualFold predicate on the "unit" field.
func UnitEqualFold(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEqualFold(FieldUnit, v))
}

// UnitContainsFold applies the ContainsFold predicate on the "unit" field.
func UnitContainsFold(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldContainsFold(FieldUnit, v))
}

// TargetValueEQ applies the EQ predicate on the "target_value" field.
func TargetValueEQ(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldTargetValue, v))
}

// TargetValueNEQ applies the NEQ predicate on the "target_value" field.
func TargetValueNEQ(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldTargetValue, v))
}

// TargetValueIn applies the In predicate on the "target_value" field.
func TargetValueIn(vs ...float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldTargetValue, vs...))
}

// TargetValueNotIn applies the NotIn predicate on the "target_value" field.
func TargetValueNotIn(vs ...float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldTargetValue, vs...))
}

// TargetValueGT applies the GT predicate on the "target_value" field.
func TargetValueGT(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldTargetValue, v))
}

// TargetValueGTE applies the GTE predicate on the "target_value" field.
func TargetValueGTE(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldTargetValue, v))
}

// TargetValueLT applies the LT predicate on the "target_value" field.
func TargetValueLT(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldTargetValue, v))
}

// TargetValueLTE applies the LTE predicate on the "target_value" field.
func TargetValueLTE(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldTargetValue, v))
}

// TargetValueIsNil applies the IsNil predicate on the "target_value" field.
func TargetValueIsNil() predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIsNull(FieldTargetValue))
}

// TargetValueNotNil applies the NotNil predicate on the "target_value" field.
func TargetValueNotNil() predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotNull(FieldTargetValue))
}

// CurrentValueEQ applies the EQ predicate on the "current_value" field.
func CurrentValueEQ(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldCurrentValue, v))
}

// CurrentValueNEQ applies the NEQ predicate on the "current_value" field.
func CurrentValueNEQ(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldCurrentValue, v))
}

// CurrentValueIn applies the In predicate on the "current_value" field.
func CurrentValueIn(vs ...float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldCurrentValue, vs...))
}

// CurrentValueNotIn applies the NotIn predicate on the "current_value" field.
func CurrentValueNotIn(vs ...float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldCurrentValue, vs...))
}

// CurrentValueGT applies the GT predicate on the "current_value" field.
func CurrentValueGT(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldCurrentValue, v))
}

// CurrentValueGTE applies the GTE predicate on the "current_value" field.
func CurrentValueGTE(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldCurrentValue, v))
}

// CurrentValueLT applies the LT predicate on the "current_value" field.
func CurrentValueLT(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldCurrentValue, v))
}

// CurrentValueLTE applies the LTE predicate on the "current_value" field.
func CurrentValueLTE(v float64) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldCurrentValue, v))
}

// TargetDateEQ applies the EQ predicate on the "target_date" field.
func TargetDateEQ(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldTargetDate, v))
}

// TargetDateNEQ applies the NEQ predicate on the "target_date" field.
func TargetDateNEQ(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldTargetDate, v))
}

// TargetDateIn applies the In predicate on the "target_date" field.
func TargetDateIn(vs ...time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldTargetDate, vs...))
}

// TargetDateNotIn applies the NotIn predicate on the "target_date" field.
func TargetDateNotIn(vs ...time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldTargetDate, vs...))
}

// TargetDateGT applies the GT predicate on the "target_date" field.
func TargetDateGT(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldTargetDate, v))
}

// TargetDateGTE applies the GTE predicate on the "target_date" field.
func TargetDateGTE(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldTargetDate, v))
}

// TargetDateLT applies the LT predicate on the "target_date" field.
func TargetDateLT(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldTargetDate, v))
}

// TargetDateLTE applies the LTE predicate on the "target_date" field.
func TargetDateLTE(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldTargetDate, v))
}

// TargetDateIsNil applies the IsNil predicate on the "target_date" field.
func TargetDateIsNil() predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIsNull(FieldTargetDate))
}

// TargetDateNotNil applies the NotNil predicate on the "target_date" field.
func TargetDateNotNil() predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotNull(FieldTargetDate))
}

// CalculationMethodEQ applies the EQ predicate on the "calculation_method" field.
func CalculationMethodEQ(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldCalculationMethod, v))
}

// CalculationMethodNEQ applies the NEQ predicate on the "calculation_method" field.
func CalculationMethodNEQ(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldCalculationMethod, v))
}

// CalculationMethodIn applies the In predicate on the "calculation_method" field.
func CalculationMethodIn(vs ...string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldCalculationMethod, vs...))
}

// CalculationMethodNotIn applies the NotIn predicate on the "calculation_method" field.
func CalculationMethodNotIn(vs ...string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldCalculationMethod, vs...))
}

// CalculationMethodGT applies the GT predicate on the "calculation_method" field.
func CalculationMethodGT(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldCalculationMethod, v))
}

// CalculationMethodGTE applies the GTE predicate on the "calculation_method" field.
func CalculationMethodGTE(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldCalculationMethod, v))
}

// CalculationMethodLT applies the LT predicate on the "calculation_method" field.
func CalculationMethodLT(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldCalculationMethod, v))
}

// CalculationMethodLTE applies the LTE predicate on the "calculation_method" field.
func CalculationMethodLTE(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldCalculationMethod, v))
}

// CalculationMethodContains applies the Contains predicate on the "calculation_method" field.
func CalculationMethodContains(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldContains(FieldCalculationMethod, v))
}

// CalculationMethodHasPrefix applies the HasPrefix predicate on the "calculation_method" field.
func CalculationMethodHasPrefix(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldHasPrefix(FieldCalculationMethod, v))
}

// CalculationMethodHasSuffix applies the HasSuffix predicate on the "calculation_method" field.
func CalculationMethodHasSuffix(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldHasSuffix(FieldCalculationMethod, v))
}

// CalculationMethodIsNil applies the IsNil predicate on the "calculation_method" field.
func CalculationMethodIsNil() predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIsNull(FieldCalculationMethod))
}

// CalculationMethodNotNil applies the NotNil predicate on the "calculation_method" field.
func CalculationMethodNotNil() predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotNull(FieldCalculationMethod))
}

// CalculationMethodEqualFold applies the EqualFold predicate on the "calculation_method" field.
func CalculationMethodEqualFold(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEqualFold(FieldCalculationMethod, v))
}

// CalculationMethodContainsFold applies the ContainsFold predicate on the "calculation_method" field.
func CalculationMethodContainsFold(v string) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldContainsFold(FieldCalculationMethod, v))
}

// IsAutoCalculatedEQ applies the EQ predicate on the "is_auto_calculated" field.
func IsAutoCalculatedEQ(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldIsAutoCalculated, v))
}

// IsAutoCalculatedNEQ applies the NEQ predicate on the "is_auto_calculated" field.
func IsAutoCalculatedNEQ(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldIsAutoCalculated, v))
}

// LastCalculatedEQ applies the EQ predicate on the "last_calculated" field.
func LastCalculatedEQ(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldLastCalculated, v))
}

// LastCalculatedNEQ applies the NEQ predicate on the "last_calculated" field.
func LastCalculatedNEQ(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldLastCalculated, v))
}

// LastCalculatedIn applies the In predicate on the "last_calculated" field.
func LastCalculatedIn(vs ...time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldLastCalculated, vs...))
}

// LastCalculatedNotIn applies the NotIn predicate on the "last_calculated" field.
func LastCalculatedNotIn(vs ...time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldLastCalculated, vs...))
}

// LastCalculatedGT applies the GT predicate on the "last_calculated" field.
func LastCalculatedGT(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldLastCalculated, v))
}

// LastCalculatedGTE applies the GTE predicate on the "last_calculated" field.
func LastCalculatedGTE(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldLastCalculated, v))
}

// LastCalculatedLT applies the LT predicate on the "last_calculated" field.
func LastCalculatedLT(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldLastCalculated, v))
}

// LastCalculatedLTE applies the LTE predicate on the "last_calculated" field.
func LastCalculatedLTE(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldLastCalculated, v))
}

// LastCalculatedIsNil applies the IsNil predicate on the "last_calculated" field.
func LastCalculatedIsNil() predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIsNull(FieldLastCalculated))
}

// LastCalculatedNotNil applies the NotNil predicate on the "last_calculated" field.
func LastCalculatedNotNil() predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotNull(FieldLastCalculated))
}

// DisplayOrderEQ applies the EQ predicate on the "display_order" field.
func DisplayOrderEQ(v int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldDisplayOrder, v))
}

// DisplayOrderNEQ applies the NEQ predicate on the "display_order" field.
func DisplayOrderNEQ(v int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldDisplayOrder, v))
}

// DisplayOrderIn applies the In predicate on the "display_order" field.
func DisplayOrderIn(vs ...int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldDisplayOrder, vs...))
}

// DisplayOrderNotIn applies the NotIn predicate on the "display_order" field.
func DisplayOrderNotIn(vs ...int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldDisplayOrder, vs...))
}

// DisplayOrderGT applies the GT predicate on the "display_order" field.
func DisplayOrderGT(v int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldDisplayOrder, v))
}

// DisplayOrderGTE applies the GTE predicate on the "display_order" field.
func DisplayOrderGTE(v int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldDisplayOrder, v))
}

// DisplayOrderLT applies the LT predicate on the "display_order" field.
func DisplayOrderLT(v int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldDisplayOrder, v))
}

// DisplayOrderLTE applies the LTE predicate on the "display_order" field.
func DisplayOrderLTE(v int) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldDisplayOrder, v))
}

// IsPublicEQ applies the EQ predicate on the "is_public" field.
func IsPublicEQ(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldIsPublic, v))
}

// IsPublicNEQ applies the NEQ predicate on the "is_public" field.
func IsPublicNEQ(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldIsPublic, v))
}

// ShowOnDashboardEQ applies the EQ predicate on the "show_on_dashboard" field.
func ShowOnDashboardEQ(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldShowOnDashboard, v))
}

// ShowOnDashboardNEQ applies the NEQ predicate on the "show_on_dashboard" field.
func ShowOnDashboardNEQ(v bool) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldShowOnDashboard, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasProgram applies the HasEdge predicate on the "program" edge.
func HasProgram() predicate.ImpactMetric {
	return predicate.ImpactMetric(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ProgramTable, ProgramColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProgramWith applies the HasEdge predicate on the "program" edge with a given conditions (other predicates).
func HasProgramWith(preds ...predicate.Program) predicate.ImpactMetric {
	return predicate.ImpactMetric(func(s *sql.Selector) {
		step := newProgramStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasDataPoints applies the HasEdge predicate on the "data_points" edge.
func HasDataPoints() predicate.ImpactMetric {
	return predicate.ImpactMetric(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, DataPointsTable, DataPointsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasDataPointsWith applies the HasEdge predicate on the "data_points" edge with a given conditions (other predicates).
func HasDataPointsWith(preds ...predicate.ImpactDataPoint) predicate.ImpactMetric {
	return predicate.ImpactMetric(func(s *sql.Selector) {
		step := newDataPointsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ImpactMetric) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ImpactMetric) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ImpactMetric) predicate.ImpactMetric {
	return predicate.ImpactMetric(sql.NotPredicates(p))
}
